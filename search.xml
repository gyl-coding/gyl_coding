<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>笔记本散热优化</title>
      <link href="/notebooksiliconegrease.html"/>
      <url>/notebooksiliconegrease.html</url>
      
        <content type="html"><![CDATA[<div align="center"><h1>清灰换硅脂</h1></div><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1814116265&amp;auto=0&amp;height=66">    </iframe></div>------<p>均在室温25°C左右测试</p><p>准备工作：</p><ul><li><p>笔记本：联想XiaoXin16pro</p></li><li><p>软件：图吧工具箱</p></li><li><p>拆机工具（我的是6角螺丝刀、4角螺丝刀）</p></li><li><p>利民TF9硅脂一支（坪多多 23.64/1.5g）</p></li></ul><p>在未清灰换硅脂的情况下，使用图吧工具箱对笔记本双烤6分钟，CPU温度如下：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/images/img.png" alt=""></p><p>在对笔记本拆机，风扇清灰后，双烤6分左右，CPU温度如下：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/images/img_1.png" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/images/1711162605050.png" alt=""></p><p>然后拆卸散热模块：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/images/img_2.png" alt=""></p><p>然后涂抹TF9硅脂，注意涂抹的越薄越好，硅脂的作用只是为了填补空隙，涂厚了反而会影响散热效果：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/images/img_3.png" alt=""></p><p>使用刮刀抹平：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/images/img_4.png" alt=""></p><p>然后装回散热模组，接好电源排线，开始烤鸡测试：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/images/img_5.png" alt=""></p><p>一切正常，温度猛降20°C，装回后台，清灰换脂完成：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/images/img_5.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 硬件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 散热 </tag>
            
            <tag> 硅脂 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>香港迪士尼出行游玩攻略</title>
      <link href="/hongkong.html"/>
      <url>/hongkong.html</url>
      
        <content type="html"><![CDATA[<div align="center"><h1>香港迪士尼攻略</h1></div><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1814116265&amp;auto=0&amp;height=66">    </iframe></div><p>香港迪士尼官网：<a href="https://www.hongkongdisneyland.com/zh-hk/" target="_blank" rel="noopener">https://www.hongkongdisneyland.com/zh-hk/</a></p><h1 id="一、港澳通行证"><a href="#一、港澳通行证" class="headerlink" title="一、港澳通行证"></a>一、港澳通行证</h1><p>首先到本地所在出入境大厅办理港澳通行证，制卡时间一个月，可以在微信公众号搜索例如“深圳公安”，然后找到出入境，选择预约办理日期，填好审核资料。然后等到预约那天去现场拍照、填写资料、缴费即可。</p><p>tops：我之前在龙岗分局出入境大厅，现场预约填得的未来几天的日期，但是现场工作人员还是给我办理了。</p><h1 id="二、出行物件准备清单"><a href="#二、出行物件准备清单" class="headerlink" title="二、出行物件准备清单"></a>二、出行物件准备清单</h1><ul><li><p>英标插头</p><p>香港用的是英标插头，类似于我们的空调插头，比大陆用的插头稍微大一点，所以需要转换为可插入我们国内的插头，为我们的电子设备充电，有的酒店可能会提供，自己买淘宝一般10左右一个，如果只有type-c充电，可提前询问好酒店，会必需品；</p></li><li><p>境外流量包/流量卡</p><p>支付宝搜索“境外上网”，可提前90天办理境外流量包，到香港使用移动网络自动激活，未激活90天内可以申请退款；</p></li></ul><p>​    或者购买流量卡和英标套餐，一起才不到20RMB，但是我们买的流量卡不知道为什么到了香港用不了，还好在出发前准备了备选方案，提前买好了流量包；</p><ul><li><p>港币/八达通/带visa标记的信用卡/支付宝/微信</p><ul><li>港币各大银行都有兑换，不过一般都需要提前一周预先，大致步骤是先到手机银行使用人民币兑换港币，然后预约领取纸质港币的时间，详细步骤可致电该银行客服；</li><li>或者在出入境口岸兑换，但他们可能会赚点手续费；</li><li>坐的士只收现金，起步价27HK(2km)，然后200m/1.6HK，不同的车可能略微有点差别；</li><li>大部分商店都可以使用微信/支付宝/visa信用卡/支付；</li><li>少部分街边小吃还是只收现金；</li><li>八达通类似于我们的微信支付，衣食住行全用他，但因为现在大部分商店都支持微信/支付宝，所以不是经常去的话就没必要再充八达通了；</li><li>所以必须使用现金的主要场景就是：打车+交通工具（叮叮车+天星小轮）+街边小吃（我们玩两天只花了300HK的现金），网上一般推荐兑换500HK或者1000HK，换的多汇率更低更省钱，但是没花完换回来也是需要手续费的，这个看你们出去游玩的场景而定；</li></ul></li><li><p>迪士尼门票</p><ul><li>迪士尼平常门票600左右一天，节假日可能还有优惠套餐，可以去闲鱼、淘宝、抖音多对比一下价格；</li><li>或者闲鱼购买别人的年卡玩一天不到200元，查的不严时可以蒙混过关；但是我们去玩的这段时间（2023/3）听说有人被警察抓进去关了14天，所以我们没敢冒险，老老实实在闲鱼花450RMB/人买的门票；</li><li>迪士尼的处处拍原价三百多，可以去闲鱼约好多人组队一起；</li><li>迪士尼提供三合一（中+晚+小食）、二合一（中/晚+小食）套餐，可以去淘宝上买，也可以自备点零食；</li></ul></li><li><p>Goole Maps</p><ul><li>都说在香港除了谷歌地图其他的都不太准，这句话说的并不全对；</li><li>因为我们从星光大道导航去香港西九龙高铁站，Goole Maps导航好大一个弯，步行一小时多。而高德地图导航20分钟左右。为了验证那个路线是正常的，我们特意问了本地人，提示我们按高德推荐的路线走；而事实是星光大道导航去香港西九龙高铁站高德导航才是靠谱的；</li><li>Goole Maps的优势体现在等公交时有等候时长提示，其他的还有待挖掘（但还是推荐下载，因为本地人Goole Maps用的多）；</li><li>Goole Maps 如果在大陆不能下载，那可以到香港激活流量后就可以下载了；</li></ul></li><li><p>香港迪士尼乐园app、处处拍app、其他软件</p><ul><li>香港迪士尼乐园app用于进园、预约、园内购物；</li><li>处处拍app用于迪士尼工作人员帮忙拍照，不用可以不下载；</li><li>其他软件，例如打车的、看美食的等等，没下不推荐，网上有；</li></ul></li><li><p>去迪士尼可以自带两个空水壶，迪士尼各卫生间附近都有饮水机可以接水，迪士尼的矿泉水30HK一瓶，大概26RMB一瓶（1HK=0.87RMB），钞能力玩家请忽略。</p></li><li><p>充电宝</p></li></ul><h1 id="三、香港迪士尼路线安排"><a href="#三、香港迪士尼路线安排" class="headerlink" title="三、香港迪士尼路线安排"></a>三、香港迪士尼路线安排</h1><p>出入境需要提前准备好黑码，并提前出入境，出境时打印的小票需要保存到入境（以防在港逗留时被查），人少时很快；</p><ul><li><p>深圳北到西九龙，然后坐地铁到迪士尼；18+41=59min（来源于高德）；75+21=96RMB左右/人；</p></li><li><p>深圳湾口岸出境后开始拼车到迪士尼；46min（来源于高德）；  70RMB左右/人；</p></li><li><p>或其他、可以根据实际情况自行安排；</p></li></ul><h1 id="四、香港迪士尼游玩"><a href="#四、香港迪士尼游玩" class="headerlink" title="四、香港迪士尼游玩"></a>四、香港迪士尼游玩</h1><ul><li>琳娜贝尔需要入园后才可以预约拍照，10.30开园，很多人排队，最少9.30就开始排队等开园才有可能预约上。</li><li>香港迪士尼的项目都很快、如果玩两天，玩项目可以单独安排一天、和角色拍照一天；如果玩一天、也想有美美的照片，可以闲鱼拼一个处处拍，性价比高，没那么累；</li><li>比较刺激的项目有：冲天遥控车、玩具兵团调降伞、迷离大宅、灰熊山极速矿车、星战极速穿梭、铁甲奇侠飞行之旅等；</li><li>适合拍照的有：琳娜贝尔、奇妙梦想城堡、美国小镇大街、欢乐桶等；</li><li>路上不定时会有花车巡游、街演、在香港迪士尼乐园app都可以看到出演时间；</li><li>晚上8.30奇妙梦想城堡处有烟花，晚上的城堡也很美；</li></ul><h1 id="五、住宿"><a href="#五、住宿" class="headerlink" title="五、住宿"></a>五、住宿</h1><p>游玩、购物比较方便的地方推荐尖沙咀（我们住的是香港尖沙咀皇悦酒店）、也有很多其他的酒店、可以多看看网上推荐的；</p><h1 id="六、香港其他玩的吃的"><a href="#六、香港其他玩的吃的" class="headerlink" title="六、香港其他玩的吃的"></a>六、香港其他玩的吃的</h1><p>不做推荐，可做参考；</p><ul><li>网红美食<ul><li>肥姐小食店（1点开店，没吃到不评价）</li><li>椰汁大王（清甜爽口，可以尝试）</li><li>威威小食（招牌臭豆腐和猪大肠是最不好吃的，希望我的观点能被你们推翻）</li><li>华嫂冰室（在我们看来就是本地非常普通的茶餐厅，但是被网络博主吹到天上去了）</li><li>富豪蛋筒（流动的面包车做的，正好吃饱了碰上的没有点，后来没碰到了，好可惜）</li></ul></li><li>好吃的美食<ul><li>红烧牛肉面（吹风机手柄粗的大牛肉块比面还要多，贼划算，吃的很过瘾）60HK；</li><li>本地人流量还可以的茶餐厅（非华嫂冰室之类的）；</li></ul></li><li>游玩路线<ul><li>旺角打卡网红美食；</li><li>旺角购物（药物、美妆、服饰等等、可以寄存酒店）；</li><li>吃完饭去维多利亚港拍照，看风景；</li><li>乘坐120多年历史的天星小轮，3.2HK/人（下船后还可以去乘坐摩天轮、逛香港的ifc大楼）；</li><li>打卡华嫂冰室；</li><li>乘坐100多年历史的叮叮车（车头或车尾，优先上层风景好）3HK/人，叮叮车的主线只有一条，其中设有不同的终点起点，以颜色区分，到站没有广播；</li><li>返回酒店拿行李，沿途地铁站打卡、吃晚饭；</li><li>8.00去维多利亚港观看夜景，去星光大道更李小龙雕像合影、和明星手印拍照（最后一班回深圳北的高铁时间是22.12）；</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 出境 </tag>
            
            <tag> 香港 </tag>
            
            <tag> 迪士尼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows设置</title>
      <link href="/windowssetting.html"/>
      <url>/windowssetting.html</url>
      
        <content type="html"><![CDATA[<div align="center"><h1>Windows设置</h1></div><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1814116265&amp;auto=0&amp;height=66">    </iframe></div>计算机\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\StuckRects3<p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="C:%5CUsers%5C10258%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20230106142327697.png" alt=""></p><p>然后把FE下面的数值进行修改：</p><p>　　01任务栏置顶（在上）。</p><p>　　02任务栏在右。</p><p>　　03任务栏在下。</p><p>​       04任务栏在左。</p><p>Ctrl+Shift+Esc打开任务管理器，重启Windows资源管理器</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 注册表 </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git Commit Message 编写指南</title>
      <link href="/gitcommitmessage.html"/>
      <url>/gitcommitmessage.html</url>
      
        <content type="html"><![CDATA[<div align="center"><h1>Git Commit Message 编写指南</h1></div><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1899989255&amp;auto=0&amp;height=66">    </iframe></div><p>Git 每次提交代码，都要写 Commit message（提交说明），否则就不允许提交。</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">git</span> commit -m <span class="token string">"hello world"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上面代码的<code>-m</code>参数，就是用来指定 commit mesage 的。</p><p>但是，一般来说，commit message 应该清晰明了，说明本次提交的目的。</p><p>目前，社区有多种 Commit message 的<a href="https://github.com/ajoslin/conventional-changelog/blob/master/conventions" target="_blank" rel="noopener">写法规范</a>。本文介绍<a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.greljkmo14y0" target="_blank" rel="noopener">Angular 规范</a>（见上图），这是目前使用最广的写法，比较合理和系统化，并且有配套的工具。</p><h1 id="一、Commit-message-的作用"><a href="#一、Commit-message-的作用" class="headerlink" title="一、Commit message 的作用"></a>一、Commit message 的作用</h1><p>格式化的Commit message，有几个好处。</p><p><strong>（1）提供更多的历史信息，方便快速浏览。</strong></p><p>比如，下面的命令显示上次发布后的变动，每个commit占据一行。你只看行首，就知道某次 commit 的目的。</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">git</span> log <span class="token operator">&lt;</span>last tag<span class="token operator">></span> HEAD --pretty<span class="token operator">=</span>format:%s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>（2）可以过滤某些commit（比如文档改动），便于快速查找信息。</strong></p><p>比如。</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">git</span> log <span class="token operator">&lt;</span>last release<span class="token operator">></span> HEAD --grep feature<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>（3）可以直接从commit生成Change log。</strong></p><h1 id="二、Commit-message-的格式"><a href="#二、Commit-message-的格式" class="headerlink" title="二、Commit message 的格式"></a>二、Commit message 的格式</h1><p>每次提交，Commit message 都包括三个部分：Header，Body 和 Footer。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>type<span class="token operator">></span><span class="token punctuation">(</span><span class="token operator">&lt;</span>scope<span class="token operator">></span><span class="token punctuation">)</span>: <span class="token operator">&lt;</span>subject<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>footer<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，Header 是必需的，Body 和 Footer 可以省略。</p><p>不管是哪一个部分，任何一行都不得超过72个字符（或100个字符）。这是为了避免自动换行影响美观。</p><h2 id="2-1-Header"><a href="#2-1-Header" class="headerlink" title="2.1 Header"></a>2.1 Header</h2><p>Header部分只有一行，包括三个字段：<code>type</code>（必需）、<code>scope</code>（可选）和<code>subject</code>（必需）。</p><p><strong>（1）type</strong></p><p><code>type</code>用于说明 commit 的类别，只允许使用下面7个标识。</p><blockquote><ul><li>feat：新功能（feature）</li><li>fix：修补bug</li><li>docs：文档（documentation）</li><li>style： 格式（不影响代码运行的变动）</li><li>refactor：重构（即不是新增功能，也不是修改bug的代码变动）</li><li>test：增加测试</li><li>chore：构建过程或辅助工具的变动</li></ul></blockquote><p>如果<code>type</code>为<code>feat</code>和<code>fix</code>，则该 commit 将肯定出现在 Change log 之中。其他情况（<code>docs</code>、<code>chore</code>、<code>style</code>、<code>refactor</code>、<code>test</code>）由你决定，要不要放入 Change log，建议是不要。</p><p><strong>（2）scope</strong></p><p><code>scope</code>用于说明 commit 影响的范围，比如数据层、控制层、视图层等等，视项目不同而不同。</p><p><strong>（3）subject</strong></p><p><code>subject</code>是 commit 目的的简短描述，不超过50个字符。</p><blockquote><ul><li>以动词开头，使用第一人称现在时，比如<code>change</code>，而不是<code>changed</code>或<code>changes</code></li><li>第一个字母小写</li><li>结尾不加句号（<code>.</code>）</li></ul></blockquote><h2 id="2-2-Body"><a href="#2-2-Body" class="headerlink" title="2.2 Body"></a>2.2 Body</h2><p>Body 部分是对本次 commit 的详细描述，可以分成多行。下面是一个范例。</p><blockquote><pre class="line-numbers language-bash"><code class="language-bash">More detailed explanatory text, <span class="token keyword">if</span> necessary.  Wrap it to about 72 characters or so. Further paragraphs come after blank lines.- Bullet points are okay, too- Use a hanging indent<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>有两个注意点。</p><p>（1）使用第一人称现在时，比如使用<code>change</code>而不是<code>changed</code>或<code>changes</code>。</p><p>（2）应该说明代码变动的动机，以及与以前行为的对比。</p><h2 id="2-3-Footer"><a href="#2-3-Footer" class="headerlink" title="2.3 Footer"></a>2.3 Footer</h2><p>Footer 部分只用于两种情况。</p><p><strong>（1）不兼容变动</strong></p><p>如果当前代码与上一个版本不兼容，则 Footer 部分以<code>BREAKING CHANGE</code>开头，后面是对变动的描述、以及变动理由和迁移方法。</p><blockquote><pre class="line-numbers language-bash"><code class="language-bash">BREAKING CHANGE: isolate scope bindings definition has changed.    To migrate the code follow the example below:    Before:    scope: <span class="token punctuation">{</span>      myAttr: <span class="token string">'attribute'</span>,    <span class="token punctuation">}</span>    After:    scope: <span class="token punctuation">{</span>      myAttr: <span class="token string">'@'</span>,    <span class="token punctuation">}</span>    The removed <span class="token variable"><span class="token variable">`</span>inject<span class="token variable">`</span></span> wasn't generaly useful <span class="token keyword">for</span> directives so there should be no code using it.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p><strong>（2）关闭 Issue</strong></p><p>如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue 。</p><blockquote><pre class="line-numbers language-bash"><code class="language-bash">Closes <span class="token comment" spellcheck="true">#234</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p>也可以一次关闭多个 issue 。</p><blockquote><pre class="line-numbers language-bash"><code class="language-bash">Closes <span class="token comment" spellcheck="true">#123, #245, #992</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><h2 id="2-4-Revert"><a href="#2-4-Revert" class="headerlink" title="2.4 Revert"></a>2.4 Revert</h2><p>还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以<code>revert:</code>开头，后面跟着被撤销 Commit 的 Header。</p><blockquote><pre class="line-numbers language-bash"><code class="language-bash">revert: feat<span class="token punctuation">(</span>pencil<span class="token punctuation">)</span>: add <span class="token string">'graphiteWidth'</span> optionThis reverts commit 667ecc1654a317a13331b17617d973392f415f02.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></blockquote><p>Body部分的格式是固定的，必须写成<code>This reverts commit &lt;hash&gt;.</code>，其中的<code>hash</code>是被撤销 commit 的 SHA 标识符。</p><p>如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的<code>Reverts</code>小标题下面。</p><h1 id="三、Git-Commit-Template"><a href="#三、Git-Commit-Template" class="headerlink" title="三、Git Commit Template"></a>三、Git Commit Template</h1><p><a href="https://blog.csdn.net/m0_46636892/article/details/122093889" target="_blank" rel="noopener">Git Commit Template</a>是一个撰写合格 Commit message 的IDEA插件。</p><p>本文摘自 阮一峰 博客 <a href="https://gitee.com/link?target=http%3A%2F%2Fwww.ruanyifeng.com%2Fblog%2F2016%2F01%2Fcommit_message_change_log.html" target="_blank" rel="noopener">《Git Commit message 编写指南》</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 挂载容器配置文件</title>
      <link href="/dockervolume.html"/>
      <url>/dockervolume.html</url>
      
        <content type="html"><![CDATA[<div align="center"><h1>Docker 挂载容器配置文件</h1></div><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1972347767&amp;auto=0&amp;height=66">    </iframe></div><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>在使用 Docker 时，不免需要将容器的配置<strong>文件/目录</strong>到宿主机上，下面我以挂载<strong>Redis-Stack</strong>的配置文件来做演示，其他容器挂载配置文件也大同小异。</p><h1 id="开始演示"><a href="#开始演示" class="headerlink" title="开始演示"></a>开始演示</h1><ol><li><p>找出需要挂载的<strong>目录/文件</strong>有哪些</p><p>进入<a href="https://hub.docker.com/" target="_blank" rel="noopener">docker.hub</a>搜索镜像</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/3c3183cefe8a887dc5adfa3e5cad7fe.png" alt=""></p><p>如图所示，找到容器内的配置文件目录。</p><p>接下来先随便启动一个临时容器</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker run -p 6379:6379 -p 8001:8001 --name redis -d redis/redis-stack:6.2.4-v3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后进入容器内</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker exec -it redis /bin/bash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>默认启动根目录下并没有<code>redis-stack.conf</code>文件</p><p>于是我们接着找，看看是否再别的地方存在默认配置文件</p><p>我们顺着如图类似的启动shell脚本往下找</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/docker-exec.jpg" alt=""></p><p>然后查看启动初始化脚本的启动内容</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/entrypoint.sh.png" alt=""></p><p>我们可以看到<code>/opt/redis-stack</code>等关键目录和<code>/data</code>数据目录</p><p>于是顺着这个目录进去看看都有什么</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/config_dir.png" alt=""></p><p>于是得到了这个默认的配置文件的所在目录</p><p><code>/opt/redis-stack/etc/redis-stack.conf</code></p><p>以及数据目录(如果为空则跳过下一步拷贝操作)</p><p><code>/data</code></p><p>其他镜像思路差不多，而默认的配置文件也可以去官网下载（前提得容器兼容),例如<a href="http://download.redis.io/redis-stable/redis.conf" target="_blank" rel="noopener">redis.conf</a></p><p>附加：<a href="https://www.runoob.com/redis/redis-conf.html" target="_blank" rel="noopener">菜鸟教程 redis.conf 参数说明</a></p></li><li><p>拷贝配置文件至宿主机</p><pre class="line-numbers language-shell"><code class="language-shell">docker cp 容器:容器目录 宿主机目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>演示</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker cp redis:/opt/redis-stack/etc/redis-stack.conf /root/docker/redis/config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除临时容器</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker stop redis$ docker rm redis<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>挂载目录</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker run \   -p 6379:6379 \   -p 8001:8001 \   -v /root/docker/redis/config/redis-stack.conf:/redis-stack.conf \   --name redis \   -d redis/redis-stack:6.2.4-v3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>卷功能可以将宿主机数据（如源代码）、数据库或者其他文件添加到镜像中并且<code>替换容器内的文件</code>，并不是将镜像中的文件链接到宿主机，并且允许我们在多个容器间共享这些内容。可以利用此功能来测试容器和内部的应用程序代码，管理日志，或者处理容器内部的数据库。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 开发技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Docker compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker运行Redis容器</title>
      <link href="/runredisondocker.html"/>
      <url>/runredisondocker.html</url>
      
        <content type="html"><![CDATA[<div align="center"><h1>Docker运行Redis stack服务</h1></div><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1988564487&amp;auto=0&amp;height=66">    </iframe></div><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><ul><li><h2 id="Redis-stack"><a href="#Redis-stack" class="headerlink" title="Redis stack"></a><a href="https://redis.io/docs/stack/" target="_blank" rel="noopener">Redis stack</a></h2><p>Redis Stack 是一组软件套件，它主要由三部分组成。</p><ul><li>一部分是 Redis Stack Server</li><li>一部分是可视化工具<a href="https://redis.io/docs/stack/insight/" target="_blank" rel="noopener">RedisInsight</a></li><li>一部分是 Redis Stack 客户端<a href="https://redis.io/docs/clients/#java" target="_blank" rel="noopener">Clients</a></li></ul><p>其中 Redis Stack Server 由 <a href="https://redis.io/docs/about/users/" target="_blank" rel="noopener">Redis</a>，五种功能模块<a href="https://redis.io/docs/stack/json" target="_blank" rel="noopener">RedisJSON</a>, <a href="https://redis.io/docs/stack/search" target="_blank" rel="noopener">RediSearch</a>, <a href="https://redis.io/docs/stack/graph" target="_blank" rel="noopener">RedisGraph</a>, <a href="https://redis.io/docs/stack/timeseries" target="_blank" rel="noopener">RedisTimeSeries</a>和 <a href="https://redis.io/docs/stack/bloom" target="_blank" rel="noopener">RedisBloom</a> 组成。</p></li><li><h2 id="Redis-Redis-stack镜像"><a href="#Redis-Redis-stack镜像" class="headerlink" title="Redis/Redis-stack镜像"></a><a href="https://hub.docker.com/r/redis/redis-stack" target="_blank" rel="noopener">Redis/Redis-stack镜像</a></h2><p>包含可视化工具<a href="https://redis.io/docs/stack/insight/" target="_blank" rel="noopener">RedisInsight</a>及<a href="https://redis.io/docs/stack/json" target="_blank" rel="noopener">RedisJSON</a>, <a href="https://redis.io/docs/stack/search" target="_blank" rel="noopener">RediSearch</a>, <a href="https://redis.io/docs/stack/graph" target="_blank" rel="noopener">RedisGraph</a>, <a href="https://redis.io/docs/stack/timeseries" target="_blank" rel="noopener">RedisTimeSeries</a>和 <a href="https://redis.io/docs/stack/bloom" target="_blank" rel="noopener">RedisBloom</a>模块的Redis服务,更适合于开发测试环境</p></li></ul><ul><li><h2 id="Redis-Redis-stack-server镜像"><a href="#Redis-Redis-stack-server镜像" class="headerlink" title="Redis/Redis-stack-server镜像"></a><a href="redis/redis-stack-server">Redis/Redis-stack-server镜像</a></h2><p>包含<a href="https://redis.io/docs/stack/json" target="_blank" rel="noopener">RedisJSON</a>, <a href="https://redis.io/docs/stack/search" target="_blank" rel="noopener">RediSearch</a>, <a href="https://redis.io/docs/stack/graph" target="_blank" rel="noopener">RedisGraph</a>, <a href="https://redis.io/docs/stack/timeseries" target="_blank" rel="noopener">RedisTimeSeries</a>和 <a href="https://redis.io/docs/stack/bloom" target="_blank" rel="noopener">RedisBloom</a>模块的Redis服务,更适合于生产环境</p></li></ul><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><blockquote><p>进入DockerHub搜索<a href="https://hub.docker.com/search?q=redis" target="_blank" rel="noopener">Redis镜像</a>,到目前为止(22/10/24)最新稳定版为: 6.2.4-v3 , 7.0及以上为RC版本</p></blockquote><ol><li><h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><pre class="line-numbers language-shell"><code class="language-shell">$ docker pull redis/redis-stack:6.2.4-v3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h4 id="默认启动"><a href="#默认启动" class="headerlink" title="默认启动"></a>默认启动</h4><ul><li><h3 id="redis-redis-stack-server"><a href="#redis-redis-stack-server" class="headerlink" title="redis/redis-stack-server"></a>redis/redis-stack-server</h3><pre class="line-numbers language-shell"><code class="language-shell">$ docker run -d --name redis-stack-server -p 6379:6379 redis/redis-stack-server:6.2.4-v3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h3 id="redis-redis-stack"><a href="#redis-redis-stack" class="headerlink" title="redis/redis-stack"></a>redis/redis-stack</h3><p>比redis/redis-stack-server多一个端口8001,为<code>RedisInsight</code>端口</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker run -d --name redis-stack -p 6379:6379 -p 8001:8001 redis/redis-stack:6.2.4-v3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><h4 id="自定义启动"><a href="#自定义启动" class="headerlink" title="自定义启动"></a>自定义启动</h4><h5 id="目录挂载"><a href="#目录挂载" class="headerlink" title="目录挂载"></a>目录挂载</h5><p>将所有数据保存在本地目录local-data中</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker run -v /local-data/:/data redis/redis-stack:6.2.4-v3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h5><p>将端口绑定到宿主机上</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker run -p 16379:6379 -p 18001:8001 redis/redis-stack:6.2.4-v3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h5><p>使用本地用户目录(可更改)下的<code>pwd/local-redis-stack.conf</code>配置文件启动</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker run -v `pwd`/local-redis-stack.conf:/redis-stack.conf -p 16379:6379 -p 18001:8001 redis/redis-stack:6.2.4-v3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="Environment-variables"><a href="#Environment-variables" class="headerlink" title="Environment variables"></a>Environment variables</h5><ul><li><p><code>REDIS_ARGS</code>: <a href="https://www.runoob.com/redis/redis-conf.html" target="_blank" rel="noopener">Redis 配置</a></p></li><li><p><code>REDISEARCH_ARGS</code>: RediSearch 配置</p></li><li><p><code>REDISJSON_ARGS</code>: RedisJSON 配置</p></li><li><p><code>REDISGRAPH_ARGS</code>: RedisGraph 配置</p></li><li><p><code>REDISTIMESERIES_ARGS</code>: RedisTimeSeries 配置</p></li><li><p><code>REDISBLOOM_ARGS</code>: RedisBloom 配置</p><p>例如设置Redis连接密码:</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker run -e REDIS_ARGS="--requirepass root" redis/redis-stack:6.2.4-v3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h5 id="自定义启动-1"><a href="#自定义启动-1" class="headerlink" title="自定义启动"></a>自定义启动</h5><p>根据如上教程自定义组合配置命令启动即可</p><pre class="line-numbers language-shell"><code class="language-shell">$ docker run \    -p 16379:6379 \    -p 18001:8001 \    -v /root/docker/redis/data/:/data \    -v /root/docker/redis/config/redis-stack.conf:/redis-stack.conf \    -e REDIS_ARGS="--requirepass root" \    --restart=always \    -d redis/redis-stack:6.2.4-v3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>RedisInsight访问: <a href="http://ip:18001/" target="_blank" rel="noopener">http://ip:18001/</a></p></li><li><h4 id="连接-redis-cli"><a href="#连接-redis-cli" class="headerlink" title="连接 redis-cli"></a>连接 redis-cli</h4><pre class="line-numbers language-shell"><code class="language-shell">$ docker exec -it redis-stack redis-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h1 id="使用Client连接Redis"><a href="#使用Client连接Redis" class="headerlink" title="使用Client连接Redis"></a>使用Client连接Redis</h1><h5 id="SpringBoot"><a href="#SpringBoot" class="headerlink" title="SpringBoot"></a>SpringBoot</h5><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>redis.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>jedis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h5><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Redis </tag>
            
            <tag> 容器技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目开发经验</title>
      <link href="/eps-xiang-mu.html"/>
      <url>/eps-xiang-mu.html</url>
      
        <content type="html"><![CDATA[<h1 id="设备管理平台"><a href="#设备管理平台" class="headerlink" title="设备管理平台"></a>设备管理平台</h1><blockquote><p>针对公司售出的液基细胞染色制片机、玻片扫描仪、AI算法服务器等设备；进行远程控制、参数矫正、耗材上报、软件升级及故障预警；旨在解决设备售后的维修、养护、耗材等问题；</p></blockquote><h2 id="UML用例图"><a href="#UML用例图" class="headerlink" title="UML用例图"></a>UML用例图</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-%E7%B3%BB%E7%BB%9F%E7%94%A8%E4%BE%8B%E5%9B%BE.png" alt=""></p><h2 id="业务流程图"><a href="#业务流程图" class="headerlink" title="业务流程图"></a>业务流程图</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt=""></p><h2 id="演示截图"><a href="#演示截图" class="headerlink" title="演示截图"></a>演示截图</h2><h3 id="1-仪表盘"><a href="#1-仪表盘" class="headerlink" title="1.仪表盘"></a>1.仪表盘</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-1-%E4%BB%AA%E8%A1%A8%E7%9B%98.png" alt=""></p><h3 id="2-权限管理"><a href="#2-权限管理" class="headerlink" title="2.权限管理"></a>2.权限管理</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-2-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86.png" alt=""></p><h3 id="3设备管理"><a href="#3设备管理" class="headerlink" title="3设备管理"></a>3设备管理</h3><p>3.1设备列表</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-3.1-%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86.png" alt=""></p><p>3.2参数管理</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-3.2-%E5%8F%82%E6%95%B0%E7%AE%A1%E7%90%86.png" alt=""></p><h3 id="4-报警设置"><a href="#4-报警设置" class="headerlink" title="4.报警设置"></a>4.报警设置</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-4-%E6%8A%A5%E8%AD%A6%E8%AE%BE%E7%BD%AE.png" alt=""></p><h3 id="5-工单模块"><a href="#5-工单模块" class="headerlink" title="5.工单模块"></a>5.工单模块</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-5.1-%E5%B7%A5%E5%8D%95%E6%A8%A1%E5%9D%97.png" alt=""></p><p>5.1-转发任务工单</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-5.4-%E8%BD%AC%E5%8F%91%E4%BB%BB%E5%8A%A1%E5%B7%A5%E5%8D%95.png" alt=""></p><p>5.2处理任务工单</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-5.2-%E5%A4%84%E7%90%86%E4%BB%BB%E5%8A%A1%E5%B7%A5%E5%8D%95.png" alt=""></p><p>5.3-工单处理记录</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-5.3-%E5%B7%A5%E5%8D%95%E5%A4%84%E7%90%86%E8%AE%B0%E5%BD%95.png" alt=""></p><h3 id="6-升级管理"><a href="#6-升级管理" class="headerlink" title="6-升级管理"></a>6-升级管理</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-6-%E5%8D%87%E7%BA%A7%E7%AE%A1%E7%90%86.png" alt=""></p><h3 id="7-记录模块"><a href="#7-记录模块" class="headerlink" title="7-记录模块"></a>7-记录模块</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-7-%E8%AE%B0%E5%BD%95%E6%A8%A1%E5%9D%97.png" alt=""></p><h3 id="8-统计模块"><a href="#8-统计模块" class="headerlink" title="8-统计模块"></a>8-统计模块</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/device-8-%E7%BB%9F%E8%AE%A1%E6%A8%A1%E5%9D%97.png" alt=""></p><h1 id="宫颈细胞智能辅助分析系统"><a href="#宫颈细胞智能辅助分析系统" class="headerlink" title="宫颈细胞智能辅助分析系统"></a>宫颈细胞智能辅助分析系统</h1><blockquote><p>结合扫描仪的玻片成像和本地 AI 算法服务，自动识别宫颈（癌）病变细胞，辅助病理科医生快速找出阳性样本，旨在解决病理科医生少和传统工作模式（显微镜观察玻片的每个细胞）效率底下问题；</p></blockquote><h2 id="UML用例图-1"><a href="#UML用例图-1" class="headerlink" title="UML用例图"></a>UML用例图</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-%E7%B3%BB%E7%BB%9F%E7%94%A8%E4%BE%8B%E5%9B%BE.png" alt=""></p><h2 id="业务流程图-1"><a href="#业务流程图-1" class="headerlink" title="业务流程图"></a>业务流程图</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-%E7%B3%BB%E7%BB%9F%E4%B8%9A%E5%8A%A1%E6%B5%81%E7%A8%8B%E5%9B%BE.png" alt=""></p><h2 id="演示截图-1"><a href="#演示截图-1" class="headerlink" title="演示截图"></a>演示截图</h2><h3 id="1-仪表盘-1"><a href="#1-仪表盘-1" class="headerlink" title="1.仪表盘"></a>1.仪表盘</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-1-%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90.png" alt=""></p><h3 id="2-系统管理"><a href="#2-系统管理" class="headerlink" title="2.系统管理"></a>2.系统管理</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-2-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86.png" alt=""></p><h3 id="3-病例模块"><a href="#3-病例模块" class="headerlink" title="3.病例模块"></a>3.病例模块</h3><p>3.1病例列表</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-3.1-%E7%97%85%E4%BE%8B%E7%AE%A1%E7%90%86.png" alt=""></p><p>3.2病例诊断</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-3.2-%E7%97%85%E4%BE%8B%E8%AF%8A%E6%96%AD.png" alt=""></p><p>3.3编辑报告</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-3.3-%E7%BC%96%E8%BE%91%E6%8A%A5%E5%91%8A.png" alt=""></p><p>3.4出报告</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-3.4-%E5%87%BA%E6%8A%A5%E5%91%8A.png" alt=""></p><h3 id="4-操作日志"><a href="#4-操作日志" class="headerlink" title="4.操作日志"></a>4.操作日志</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-4-%E6%93%8D%E4%BD%9C%E6%97%A5%E5%BF%97.png" alt=""></p><h3 id="5-AI分析日志"><a href="#5-AI分析日志" class="headerlink" title="5.AI分析日志"></a>5.AI分析日志</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-5-AI%E5%88%86%E6%9E%90%E6%97%A5%E5%BF%97.png" alt=""></p><h3 id="6-设备管理"><a href="#6-设备管理" class="headerlink" title="6.设备管理"></a>6.设备管理</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/base-6-%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86.png" alt=""></p><h1 id="数字云病理平台"><a href="#数字云病理平台" class="headerlink" title="数字云病理平台"></a>数字云病理平台</h1><blockquote><p>将通过本地 AI 算法（宫颈、乳腺等其他正在研发支持的病变细胞）识别后的玻片的切片图上传至云端，整合多家医疗机构的病理科医生精准高效的诊断某一个病例；以解决病理科医生少的问题（或某些医院没有病理科医生）、以及病理科医生传统工作模式（通过显微镜观察每个玻片的细胞）效率底的问题；</p></blockquote><h2 id="UML用例图-2"><a href="#UML用例图-2" class="headerlink" title="UML用例图"></a>UML用例图</h2><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-%E7%B3%BB%E7%BB%9F%E7%94%A8%E4%BE%8B%E5%9B%BE.png" alt=""></p><h2 id="演示截图-2"><a href="#演示截图-2" class="headerlink" title="演示截图"></a>演示截图</h2><h3 id="1-仪表盘-2"><a href="#1-仪表盘-2" class="headerlink" title="1.仪表盘"></a>1.仪表盘</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-1-%E4%BB%AA%E8%A1%A8%E7%9B%98.jpg" alt=""></p><h3 id="2-基础数据管理"><a href="#2-基础数据管理" class="headerlink" title="2.基础数据管理"></a>2.基础数据管理</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-2-%E5%9F%BA%E7%A1%80%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86.png" alt=""></p><h3 id="3-权限管理"><a href="#3-权限管理" class="headerlink" title="3.权限管理"></a>3.权限管理</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-3-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86.png" alt=""></p><h3 id="4-病例管理"><a href="#4-病例管理" class="headerlink" title="4.病例管理"></a>4.病例管理</h3><p>4.1工作台</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-4-%E7%97%85%E4%BE%8B%E7%AE%A1%E7%90%86.png" alt=""></p><p>4.2诊断病例</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-4.1-%E8%AF%8A%E6%96%AD%E7%97%85%E4%BE%8B.png" alt=""></p><p>4.3诊断病例&gt;查看患者信息及附件</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-4.3-%E6%9F%A5%E7%9C%8B%E6%82%A3%E8%80%85%E4%BF%A1%E6%81%AF.png" alt=""></p><p>4.4诊断病例&gt;编辑报告</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-4.4-%E7%BC%96%E8%BE%91%E6%8A%A5%E5%91%8A.png" alt=""></p><p>4.5诊断病例&gt;出报告</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-4.5-%E5%87%BA%E6%8A%A5%E5%91%8A.png" alt=""></p><h3 id="5-冰冻预约"><a href="#5-冰冻预约" class="headerlink" title="5.冰冻预约"></a>5.冰冻预约</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-5-%E9%A2%84%E7%BA%A6%E7%AE%A1%E7%90%86.png" alt=""></p><h3 id="6-消息管理"><a href="#6-消息管理" class="headerlink" title="6.消息管理"></a>6.消息管理</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-7-%E6%B6%88%E6%81%AF%E7%AE%A1%E7%90%86.png" alt=""></p><h3 id="7-统计分析"><a href="#7-统计分析" class="headerlink" title="7.统计分析"></a>7.统计分析</h3><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="./medias/project/cloud-8-%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 项目实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VirtualBox安装MacOS</title>
      <link href="/virtualboxinstallmacos.html"/>
      <url>/virtualboxinstallmacos.html</url>
      
        <content type="html"><![CDATA[<div align="center"><h1>VirtualBox安装MacOS</h1></div><blockquote><p>基于Windows上的VirtualBox安装MacOS</p></blockquote><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&amp;id=569212211&amp;auto=0&amp;height=66">    </iframe></div><h1 id="提前准备"><a href="#提前准备" class="headerlink" title="提前准备"></a>提前准备</h1><p>下载如下软件</p><ul><li><a href="https://git-scm.com/" target="_blank" rel="noopener">安装Git</a></li><li><a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="noopener">VirtualBox</a></li><li><a href="https://gitee.com/gyl_coding/macos_virtualbox" target="_blank" rel="noopener">克隆macos_virtualbox项目</a></li><li>将macos_virtualbox项目下的<code>dmg2img.exe</code>和<code>wget.exe</code>移动到Git安装目录的<code>~\Git\mingw64\bin</code>下面.</li></ul><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>进入macos_virtualbox项目目录下,右键进入 <code>Git Bash Here</code>.</li><li>执行<code>./macos-guest-virtualbox.sh</code>开始安装,其中会自动下载macos镜像和创建虚拟机,等待即可,大概一个小时.</li><li>如果virtualbox最后一行日志卡在<code>EB|#LOG:EXITBS:START</code>,则按如下操作,否则忽视该步骤<ul><li>将macos虚拟机关机</li><li>进入virtualbox安装目录打开CMD</li><li>在CMD中执行如下代码<code>VBoxManage modifyvm "macOS" --cpu-profile "Intel Core i7-6700K"</code></li></ul></li><li>正常情况下会自动初始化MacOS系统,如果VirtualBox卡在语言选择界面,则按 <code>Git Bash Here</code>中的日志操作即可.</li></ol><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/29a740c2537207aaa2125021b9afea4.jpg" alt=""></p><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><h2 id="苹果系统设置"><a href="#苹果系统设置" class="headerlink" title="苹果系统设置"></a>苹果系统设置</h2><p>   1、系统左上角苹果图标→系统偏好设置→辅助功能→显示，勾选“减弱动态效果”“减少透明度”和“无需用颜色区分”</p><p>   2、依旧是在系统偏好设置→程序坞，最小化窗口时使用“缩放效果”，取消勾选“弹跳打开应用程序”。</p><p>   3、依旧是在系统偏好设置→扩展，挨个点击左侧目录，将不需要的扩展全部去掉勾选。</p><p>   4、依旧是在系统偏好设置→用户与群组→登录项，选择用户，左下角开锁后，去掉不需要的登录项。</p><p>   5、VMware Tools的安装可以让虚拟机分辨率自适应，文件和剪贴板也可以直接与母鸡共享，属于使用必装，但安装后需要重新设置分辨率，否则画面会一直处于一个比较大的状态，影响体验，同时会有卡顿。<br>      VMware Tools的安装教程：<a href="https://www.dhzy.fun/archives/4366.html" target="_blank" rel="noopener">https://www.dhzy.fun/archives/4366.html</a></p><p>   依旧是在系统偏好设置→显示器→缩放，分辨率选择带有(HiDPI)的选项，然后勾选好，画面中的窗口会放大或者缩小。</p><p>   设置成功后拖动虚拟机窗口边界，虚拟机画面会根据虚拟机窗口大小进行自适应，但不会小于设置分辨率。系统提示“系统偏好设置”正在尝试解锁“安全性与隐私”偏好设置时，输入密码，解锁，将vmware-tools-daemon打钩即可。</p><h2 id="优化神器-beamoff"><a href="#优化神器-beamoff" class="headerlink" title="优化神器 beamoff"></a>优化神器 beamoff</h2><p>进入MacOS中Safari打开 <a href="http://files.cnblogs.com/files/yipu/beamoff.zip" target="_blank" rel="noopener">http://files.cnblogs.com/files/yipu/beamoff.zip</a><br>mac会自动解压,得到 beamoff.app<br>然后在: 系统偏好设置 - 用户与群组 - 选中你自己的用户名 - 选择 “登录项” 选项卡 - 点 + 号 找到你下载的beamoff.app</p><h1 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h1><p>AMD芯片无法启动: <a href="https://www.jianshu.com/p/c6c9aab4c715" target="_blank" rel="noopener">https://www.jianshu.com/p/c6c9aab4c715</a></p><p>MacOS设置优化: <a href="https://www.dhzy.fun/archives/4321.html" target="_blank" rel="noopener">https://www.dhzy.fun/archives/4321.html</a></p><p>MacOS优化: <a href="https://blog.csdn.net/whitehack/article/details/47074403" target="_blank" rel="noopener">https://blog.csdn.net/whitehack/article/details/47074403</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VirtualBox </tag>
            
            <tag> MacOS </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见开发技巧</title>
      <link href="/developskill.html"/>
      <url>/developskill.html</url>
      
        <content type="html"><![CDATA[<div align="center"><h1>常见开发技巧</h1></div><blockquote><p>记录了一些常见的开发技巧，可能并不完善，欢迎留言讨论。</p></blockquote><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1814116265&amp;auto=0&amp;height=66">    </iframe></div><h1 id="Idea好用插件"><a href="#Idea好用插件" class="headerlink" title="Idea好用插件"></a>Idea好用插件</h1><ul><li><input disabled="" type="checkbox"> CamelCase 驼峰命名法转换 默认 Shift+Alt+U</li><li><input disabled="" type="checkbox"> Codota    代码/命名提示</li><li><input disabled="" type="checkbox"> EasyCode 生成代码</li><li><input disabled="" type="checkbox"> GitToolBox 每行代码显示提交记录</li><li><input disabled="" type="checkbox"> IDE Eval Reset 重置30天试用期</li><li><input disabled="" type="checkbox"> JRebel and XRebel 热部署</li><li><input disabled="" type="checkbox"> Json Parser Json数据格式化</li><li><input disabled="" type="checkbox"> MyBatisX Mapper和xml文件快速跳转</li><li><input disabled="" type="checkbox"> Translation 翻译 默认 Shift+Ctrl+Y</li><li><input disabled="" type="checkbox"> Lombok</li><li><input disabled="" type="checkbox"> PlantUML integration 画工业图</li><li><input disabled="" type="checkbox"> SequenceDiagram 生成时序图</li><li><input disabled="" type="checkbox"> Yet another emoji support git提交emoji</li></ul><h1 id="常用软件破解合集"><a href="#常用软件破解合集" class="headerlink" title="常用软件破解合集"></a>常用软件破解合集</h1><p><a href="https://www.exception.site/" target="_blank" rel="noopener">异常教程 - 提供IDEA激活破解码、Pycharm激活教程</a></p><h1 id="IDEA提速"><a href="#IDEA提速" class="headerlink" title="IDEA提速"></a>IDEA提速</h1><p><a href="https://blog.csdn.net/tutian2000/article/details/80074643" target="_blank" rel="noopener">idea关闭不必要的插件减少内存占用_懵懂学子的博客-CSDN博客_idea哪些插件可以关闭</a></p><h1 id="远程Debug"><a href="#远程Debug" class="headerlink" title="远程Debug"></a>远程Debug</h1><blockquote><p>本地IDEA可以调试远程JVM中的代码,同时远程JVM会自动同步本地编译后的代码。</p></blockquote><p>在服务器Jar启动命令，<code>java</code> 之后加上如下命令：</p><pre class="line-numbers language-bash"><code class="language-bash">-Xdebug -Xrunjdwp:transport<span class="token operator">=</span>dt_socket,server<span class="token operator">=</span>y,suspend<span class="token operator">=</span>n,address<span class="token operator">=</span>*:5005<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>XDebug 表示启用调试功能</li><li>-Xrunjdwp:transport=dt_socket 加载JDWP运行调试环境并且指定通讯方式为socket</li><li>server=y/n 指定JVM是否作为调试服务器启动</li><li>suspend=y/n 是否在客户端建立连接之后启动虚拟机(调试启动异常时设置为y)</li><li>address 指定调试服务器监听的IP和端口</li></ul><p>在IDEA中，点击Edit Configuration按钮</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/idea-debug.png" alt=""></p><p>选中该服务并点击Debug按钮,开始连接远程JVM。</p><ul><li>如果碰到连接超时的情况，很有可能服务器的防火墙的问题，举例CentOs7,关闭防火墙</li></ul><pre class="line-numbers language-bash"><code class="language-bash">systemctl stop firewalld.service <span class="token comment" spellcheck="true">#停止firewall</span>systemctl disable firewalld.service <span class="token comment" spellcheck="true">#禁止firewall开机启动</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol><li>远程debug</li><li>远程运行本地代码。需在IDEA手动build，服务器log如下：</li></ol><p>​    <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/idea-debug-log.png" alt=""></p><h1 id="Windows10家庭版安装Docker"><a href="#Windows10家庭版安装Docker" class="headerlink" title="Windows10家庭版安装Docker"></a>Windows10家庭版安装Docker</h1><ul><li><a href="https://blog.csdn.net/weixin_41753316/article/details/109240636" target="_blank" rel="noopener">开启Hyper-V</a></li><li><a href="https://docs.docker.com/desktop/windows/install/" target="_blank" rel="noopener">下载Docker Desktop</a></li><li><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-manual#step-4---download-the-linux-kernel-update-package" target="_blank" rel="noopener">安装wsl和linux</a></li></ul><p><a href="https://blog.csdn.net/qq_50059788/article/details/122712706" target="_blank" rel="noopener">window10家庭版docker安装教程_佳 ~的博客-CSDN博客_win10安装docker</a></p><h1 id="Redis避免缓存穿透"><a href="#Redis避免缓存穿透" class="headerlink" title="Redis避免缓存穿透"></a>Redis避免缓存穿透</h1><p>Redis作为Mybatis二级缓存可以代替Redis 和布隆过滤器避免缓存穿透</p><h1 id="Tomcat容器优化"><a href="#Tomcat容器优化" class="headerlink" title="Tomcat容器优化"></a>Tomcat容器优化</h1><p>在spring boot配置文件中application.yml，添加以下配置</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span><span class="token key atrule">tomcat</span><span class="token punctuation">:</span><span class="token key atrule">min-spare-threads</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token key atrule">max-threads</span><span class="token punctuation">:</span> <span class="token number">100</span>  <span class="token key atrule">connection-timeout</span><span class="token punctuation">:</span> <span class="token number">5000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="指定堆参数"><a href="#指定堆参数" class="headerlink" title="指定堆参数"></a>指定堆参数</h1><p>这个根据服务器的内存大小，来设置堆参数。</p><ul><li>Xmx :设置最大的java堆大小</li><li>Xms :设置Java堆栈的初始化大小</li></ul><pre class="line-numbers language-bash"><code class="language-bash">java -server -Xms512m -Xmx768m  -jar springboot-1.0.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="Spring：docs"><a href="#Spring：docs" class="headerlink" title="Spring：docs"></a>Spring：docs</h1><ul><li><a href="https://docs.spring.io/spring-boot/docs/" target="_blank" rel="noopener">各版本文档</a></li></ul><p><a href="https://docs.spring.io/spring-boot/docs/" target="_blank" rel="noopener">Index of /spring-boot/docs</a></p><h1 id="Spring：maven-plugin"><a href="#Spring：maven-plugin" class="headerlink" title="Spring：maven-plugin"></a>Spring：maven-plugin</h1><p><a href="https://blog.csdn.net/lijunliang2017/article/details/121362220" target="_blank" rel="noopener">springboot maven插件详细说明及使用_疯狂攻城师的博客-CSDN博客_spring-boot-maven-plugin配置说明</a></p><p><a href="https://docs.spring.io/spring-boot/docs/2.5.7/maven-plugin/reference/htmlsingle/#" target="_blank" rel="noopener">Spring Boot Maven Plugin Documentation</a></p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3.4.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--https://docs.spring.io/spring-boot/docs/2.5.7/maven-plugin/reference/htmlsingle/#goals-run-parameters-details-jvmArguments--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fork</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fork</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>commandlineArguments</span><span class="token punctuation">></span></span>          -Xlint:unchecked        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>commandlineArguments</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>addResources</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>addResources</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Spring：gradle-plugin"><a href="#Spring：gradle-plugin" class="headerlink" title="Spring：gradle-plugin"></a>Spring：gradle-plugin</h1><p><a href="https://docs.spring.io/spring-boot/docs/2.5.7/gradle-plugin/reference/htmlsingle/#getting-started" target="_blank" rel="noopener">Spring Boot Gradle Plugin Reference Guide</a></p><pre class="line-numbers language-groovy"><code class="language-groovy">apply plugin<span class="token punctuation">:</span> <span class="token string">'java'</span>apply plugin<span class="token punctuation">:</span> <span class="token string">'io.spring.dependency-management'</span>plugins <span class="token punctuation">{</span>    id <span class="token string">'org.springframework.boot'</span> version <span class="token string">'2.5.7'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Spring：spring-boot-devtools"><a href="#Spring：spring-boot-devtools" class="headerlink" title="Spring：spring-boot-devtools"></a>Spring：<strong>spring-boot-devtools</strong></h1><h3 id="1-热部署"><a href="#1-热部署" class="headerlink" title="1. 热部署"></a>1. 热部署</h3><blockquote><p>JRebel通用，且不需要更改app配置，但是比较重，可根据场景选择。</p></blockquote><p>加入依赖</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使配置文件生效</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">devtools</span><span class="token punctuation">:</span>    <span class="token key atrule">restart</span><span class="token punctuation">:</span>      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token comment" spellcheck="true">#需要排除的文件 -去掉默认的 resources/**,</span>      <span class="token key atrule">exclude</span><span class="token punctuation">:</span> META<span class="token punctuation">-</span>INF/maven/**<span class="token punctuation">,</span>META<span class="token punctuation">-</span>INF/resources/**<span class="token punctuation">,</span>static/**<span class="token punctuation">,</span>public/**<span class="token punctuation">,</span>templates/**<span class="token punctuation">,</span>**/<span class="token important">*Test</span>.class<span class="token punctuation">,</span>**/<span class="token important">*Tests</span>.class<span class="token punctuation">,</span>git.properties<span class="token punctuation">,</span>META<span class="token punctuation">-</span>INF/build<span class="token punctuation">-</span>info.properties<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>idea设置auto build 如下，或者 Ctrl+F9 手动build</p><p>​    <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/skill_3.png" alt=""></p><p>如下即生效</p><p>​    <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/skill_4.png" alt=""></p><h3 id="2-远程调试"><a href="#2-远程调试" class="headerlink" title="2. 远程调试"></a>2. 远程调试</h3><blockquote><p>不如JVM自带的debug模式配置简单。</p></blockquote><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.3.4.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--开启spring-boot-devtools远程调试功能--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludeDevtools</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludeDevtools</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fork</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fork</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span>spring:  devtools:    remote:      secret: test<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>服务器启动：</p><pre class="line-numbers language-bash"><code class="language-bash">java -jar -Xdebug -Xrunjdwp:server<span class="token operator">=</span>y,transport<span class="token operator">=</span>dt_socket,suspend<span class="token operator">=</span>n supplier-1.0-SNAPSHOT.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>新增并运行该类：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Remote</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//服务器的ip和应用端口，非debug指定的端口</span>        RemoteSpringApplication<span class="token punctuation">.</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">"&lt;http://192.168.3.99:8089>"</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><p>远程debug</p></li><li><p>远程运行本地代码。需在IDEA手动build，服务器log如下：</p><p> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/skill_5.png" alt=""></p></li></ol><h1 id="Windows10-11安装OpenSSH"><a href="#Windows10-11安装OpenSSH" class="headerlink" title="Windows10/11安装OpenSSH"></a>Windows10/11安装OpenSSH</h1><p><a href="https://docs.microsoft.com/zh-cn/windows-server/administration/openssh/openssh_install_firstuse" target="_blank" rel="noopener">安装 OpenSSH</a></p><p>设置&gt;应用&gt;可选功能&gt;添加&gt;OpenSSH Server：选中添加</p><pre class="line-numbers language-powershell"><code class="language-powershell"><span class="token comment" spellcheck="true"># 启动</span><span class="token function">Start-Service</span> sshd<span class="token comment" spellcheck="true"># 设置自启</span><span class="token function">Set-Service</span> <span class="token operator">-</span>Name sshd <span class="token operator">-</span>StartupType <span class="token string">'Automatic'</span><span class="token comment" spellcheck="true"># 防火墙设置</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>Get<span class="token operator">-</span>NetFirewallRule <span class="token operator">-</span>Name <span class="token string">"OpenSSH-Server-In-TCP"</span> <span class="token operator">-</span>ErrorAction SilentlyContinue <span class="token punctuation">|</span> <span class="token function">Select-Object</span> Name<span class="token punctuation">,</span> Enabled<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">Write-Output</span> <span class="token string">"Firewall Rule 'OpenSSH-Server-In-TCP' does not exist, creating it..."</span>    New<span class="token operator">-</span>NetFirewallRule <span class="token operator">-</span>Name <span class="token string">'OpenSSH-Server-In-TCP'</span> <span class="token operator">-</span>DisplayName <span class="token string">'OpenSSH Server (sshd)'</span> <span class="token operator">-</span>Enabled True <span class="token operator">-</span>Direction Inbound <span class="token operator">-</span>Protocol TCP <span class="token operator">-</span>Action Allow <span class="token operator">-</span>LocalPort 22<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">Write-Output</span> <span class="token string">"Firewall rule 'OpenSSH-Server-In-TCP' has been created and exists."</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>账密为本地的微软账户和密码，如果没登陆微软账户则为电脑用户名和开机密码。</p><h1 id="JRebel-and-XRebel-激活"><a href="#JRebel-and-XRebel-激活" class="headerlink" title="JRebel and XRebel 激活"></a>JRebel and XRebel 激活</h1><p>生成<a href="http://jrebel.cicoding.cn/guid" target="_blank" rel="noopener"><strong>GUID</strong></a>，并替换一下GUID：</p><p><a href="http://jrebel.cicoding.cn/E80B0C7A-E930-ED5D-1BCD-79C30182F594" target="_blank" rel="noopener">http://jrebel.cicoding.cn/E80B0C7A-E930-ED5D-1BCD-79C30182F594</a></p><p> <img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/skill_6.png" alt=""></p><p>离线保存即可。</p><p><strong>2022-7-11可用。</strong></p><h1 id="服务器安全"><a href="#服务器安全" class="headerlink" title="服务器安全"></a>服务器安全</h1><ol><li>关掉外网访问，采用ssh登录密钥对。</li><li>关闭除80以后的端口，服务器之间通过局域网通讯。</li><li>及时开启数据备份，设置复杂root密码，所有端口改用不使用常用见端口。</li><li>借助安全系统限定ip，例如阿里的安全组等等。</li></ol><h1 id="Windows-Terminal-美化"><a href="#Windows-Terminal-美化" class="headerlink" title="Windows Terminal 美化"></a>Windows Terminal 美化</h1><p><a href="https://ohmyposh.dev/docs/themes" target="_blank" rel="noopener">Themes | Oh My Posh</a></p><p>1、安装Oh My Posh 和 字体(阿里云盘有备份)</p><p><a href="https://www.nerdfonts.com/font-downloads" target="_blank" rel="noopener">Nerd Fonts - Iconic font aggregator, glyphs/icons collection, &amp; fonts patcher</a></p><p>2、修改配置</p><p>a、获取所有主题<code>Get-PoshThemes</code></p><p>b、管理员执行PowerShell输入 <code>notepad $profile</code>,新打开的文本中加入<code>oh-my-posh --init --shell pwsh --config $env:POSH_THEMES_PATH/1_shell.omp.json | Invoke-Expression</code>，<code>1_shell</code>就是主题名。</p><p>3、Windows PowerShell 不允许脚本运行?</p><p>管理员执行PowerShell输入：<code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned</code></p><h2 id="Linux-Terminal-美化"><a href="#Linux-Terminal-美化" class="headerlink" title="Linux Terminal 美化"></a>Linux Terminal 美化</h2><p><a href="https://ohmyz.sh/" target="_blank" rel="noopener">Oh My Zsh - a delightful &amp; open source framework for Zsh</a></p><p>切换Gitee仓库安装教程</p><p><a href="https://www.cnblogs.com/langkyeSir/p/13890791.html" target="_blank" rel="noopener">Linux安装Oh-my-zsh</a></p><h1 id="Windwos-ssh-免密登录"><a href="#Windwos-ssh-免密登录" class="headerlink" title="Windwos ssh 免密登录"></a>Windwos ssh 免密登录</h1><pre><code>id_rsa：私钥`  `id_rsa.pub：公钥</code></pre><p><strong>一、Windwos端</strong></p><p>cmd输入<code>ssh-keygen</code>一路回车，默认会在<code>用户/.ssh</code>目录下生成公钥和私钥。</p><p><strong>二、Linux端</strong></p><p>1、linux中输入<code>ssh-keygen</code>一路回车，默认会在<code>root/.ssh</code>目录下生成公钥和私钥。</p><p>2、将Windows上<code>id_rsa.pub</code>的内容粘贴到Linux上的<code>/root/.ssh/authorized_keys</code>文件中。</p><p>如果没有<code>authorized_keys</code>文件，则使用<code>touch authorized_keys</code>和 <code>chmod 600 authorized_keys</code>创建文件即可。</p><p>Windonws免密登录Linux设置完成，反之同理。</p><h1 id="Windows-Terminal-添加服务器"><a href="#Windows-Terminal-添加服务器" class="headerlink" title="Windows Terminal 添加服务器"></a>Windows Terminal 添加服务器</h1><p>设置&gt;打开JSON配置文件&gt; <code>list</code>中添加服务器信息。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">{</span>    <span class="token string">"commandline"</span><span class="token keyword">:</span> <span class="token string">"ssh developer@192.168.1.104 -p 22"</span>,    <span class="token string">"icon"</span><span class="token keyword">:</span> <span class="token string">"C:\\\\Users\\\\10258\\\\OneDrive\\\\图片\\\\icon\\\\linux.png"</span>,   <span class="token string">"hidden"</span><span class="token keyword">:</span> false,   <span class="token string">"name"</span><span class="token keyword">:</span> <span class="token string">"DeviceDev"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Gradle和Maven修改本地仓库路径"><a href="#Gradle和Maven修改本地仓库路径" class="headerlink" title="Gradle和Maven修改本地仓库路径"></a>Gradle和Maven修改本地仓库路径</h1><p><a href="https://blog.csdn.net/liooi/article/details/120117371" target="_blank" rel="noopener">修改Gradle 和Maven本地仓库的位置_liooi的博客-CSDN博客_gradle本地仓库位置</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 开发技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Idea </tag>
            
            <tag> Spring </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql丢失数据的场景</title>
      <link href="/mysqldataloss.html"/>
      <url>/mysqldataloss.html</url>
      
        <content type="html"><![CDATA[<div align="center"><h1>Mysql丢失数据的场景</h1></div><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&amp;id=1397282233&amp;auto=0&amp;height=66">    </iframe></div><h1 id="引擎层数据丢失场景"><a href="#引擎层数据丢失场景" class="headerlink" title="引擎层数据丢失场景"></a>引擎层数据丢失场景</h1><h2 id="InnoDB丢失数据场景分析-写redo-log失败"><a href="#InnoDB丢失数据场景分析-写redo-log失败" class="headerlink" title="InnoDB丢失数据场景分析/写redo log失败"></a>InnoDB丢失数据场景分析/写redo log失败</h2><p>事务提交时需要写redo log、undo log。数据页的变更会首先在内存中完成，同时将事务操作顺序再记录到redo log中。但如果MySQl 事务提交时，被更改的数据页还保存在内存中（称为脏页），未来得及flush到磁盘上系统正好宕机了,就会丢失该事务的数据。</p><p>配置的参数 <code>innodb_flush_log_at_trx_commit</code></p><p>0 ：每秒 <code>write os cache</code> &amp; <code>flush disk</code></p><p>1 ：每次commit都 <code>write os cache</code> &amp; <code>flush disk</code></p><p>2 ：每次commit都 <code>write os cache</code>&amp; <code>write file cache</code>（然后根据<code>innodb_flush_log_at_timeout</code>参数，默认为1s  flush disk）</p><p><code>innodb_flush_log_at_trx_commit=1</code>最为安全，因为每次commit都保证redo log写入了disk。但是这种方式性能对DML性能来说比较低，如果设置为2，DML性能要比设置为1高很多。</p><h2 id="MyISAM丢失数据场景分析"><a href="#MyISAM丢失数据场景分析" class="headerlink" title="MyISAM丢失数据场景分析"></a>MyISAM丢失数据场景分析</h2><p>由于MyISAM不支持事务，所以在生产环境中基本没有使用，且MyISAM没有data cache，所有DML操作只写到OS cache中，flush disk操作均由OS来完成，因此如果服务器宕机，这部分数据肯定会丢失。</p><h1 id="主从复制导致数据不一致的场景"><a href="#主从复制导致数据不一致的场景" class="headerlink" title="主从复制导致数据不一致的场景"></a>主从复制导致数据不一致的场景</h1><p>MySQL主从复制原理：MySQL主库在事务提交时写binlog，并通过<code>sync_binlog</code>参数来控制binlog刷新到磁盘“落地”。从库中有两个线程： IO线程负责从主库读取<code>binlog</code>，并记录到本地的<code>relay log</code>中；SQL线程再将<code>relay log</code>中的记录应用到从库。如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/mysqlDataLoss_1.jfif" alt=""></p><h2 id="主库写binlog失败"><a href="#主库写binlog失败" class="headerlink" title="主库写binlog失败"></a>主库写binlog失败</h2><p>master写binlog与innodb引擎写redo类似，由参数<code>sync_binlog</code>控制：</p><p>= 0 ：表示MySQL不控制binlog的刷新，由文件系统控制<code>binlog cache</code>的刷盘</p><p>= N ：表示每sync_binlog在N次事务提交后，对<code>binlog cache</code>中的内容刷盘</p><p><code>sync_binlog=1</code>时最安全，即表示每次事务提交，MySQL都会把binlog cache中的内容<code>flush disk</code>。这样在掉电等情况下，系统只有可能丢失1个事务的数据。但是<code>sync_binlog</code>为1时，系统的IO消耗非常大。</p><p>但是N的值也不易过大，否则在系统掉电时会丢失较多的事务。当前我们生产系统设置为100.</p><h2 id="主库写redo-log、binlog不实时造成的数据不一致"><a href="#主库写redo-log、binlog不实时造成的数据不一致" class="headerlink" title="主库写redo log、binlog不实时造成的数据不一致"></a>主库写redo log、binlog不实时造成的数据不一致</h2><p>1）<code>Redo log</code>未写入，但binlog已写入，则宕机恢复后从库数据比主库多。</p><p>2）<code>Redo log</code>写入了，但binlog未写入，则宕机恢复后从库数据量比主库少。</p><p>从目前来看，只能牺牲性能去换取数据的安全性，必须要设置<code>redo log</code>和<code>binlog</code>为实时刷盘 (控制<code>innodb_flush_log_at_trx_commit</code>和 <code>sync_binlog</code>)，如果对性能要求很高，则考虑使用SSD来替代机械盘。</p><p>几个重要的参数：</p><p>​    ①<code>sync_binlog</code>：决定刷盘时机,控制二进制日志被同步到磁盘前二进制日志提交组的数量</p><p>​    ②<code>max_binlog_size</code>：binlog文件的最大容量</p><p>​    ③<code>binlog_cache_size</code>：在事务中binlog的缓存大小</p><h2 id="从库写redo-log、binlog不实时造成的数据不一致"><a href="#从库写redo-log、binlog不实时造成的数据不一致" class="headerlink" title="从库写redo log、binlog不实时造成的数据不一致"></a>从库写redo log、binlog不实时造成的数据不一致</h2><p>从库读取主库的binlog日志后，需要落地3个文件：</p><p><code>relay log</code>：即IO Thread读取过来的主库binlog，内容格式与主库的binlog一致</p><p><code>relay log info</code>：记录SQL Thread应用的relay log的位置、文件号等信息</p><p><code>master info</code>：记录IO Thread读取主库的binlog的位置、文件号、延迟等信息</p><p>因此如果当这3个文件如果不及时落地，则宕机恢复后会导致数据的不一致。</p><p>在MySQL 5.6.2之前，从库记录的主库信息以及从库应用binlog的信息存放在文件中，<a href="http://xn--master-9l5j.xn--inforelay-log-z50u.info" target="_blank" rel="noopener">即master.info与relay-log.info</a>。在5.6.2版本之后，允许记录到table中，参数设置如下：</p><p>master info与relay info还有3个参数控制刷新：</p><p>1）<code>sync_relay_log</code>：默认为10000，即每10000次sync_relay_log事件会刷新到磁盘。为0则表示不刷新，交由OS的cache控制。</p><p>2）<code>sync_master_info</code>:若<code>master-info-repository</code>为FILE，当设置为0时，则每次sync_master_info事件都会刷新到磁盘，默认为10000次刷新到磁盘；若master-info-repository为TABLE，当设置为0时，则表不做任何更新，设置为1，则每次事件会更新表。默认为10000。</p><p>3）<code>sync_relay_log_info</code>：若relay_log_info_repository为FILE，当设置为0时，交由OS刷新磁盘，默认为10000次刷新到磁盘；若relay_log_info_repository为TABLE，则无论为任何值，每次evnet都会更新表。</p><p>如果参数设置如下：</p><p><code>sync_master_info = 1</code>，</p><p><code>sync_relay_log = 1</code>，</p><p><code>sync_relay_log_info = 1</code> ，</p><p><code>master-info-repository  = TABLE</code> ，</p><p><code>relay-log-info-repository = TABLE</code></p><p>将导致调用fsync()/fdatasync()随着master的事务的增加而增加，且若slave的binlog和redo也实时刷新的话，会带来很严重的IO性能瓶颈。</p><h2 id="主库宕机后无法及时恢复造成的数据不一致"><a href="#主库宕机后无法及时恢复造成的数据不一致" class="headerlink" title="主库宕机后无法及时恢复造成的数据不一致"></a>主库宕机后无法及时恢复造成的数据不一致</h2><p>当主库出现故障后，binlog未及时拉到从库中，或者各个从库收到的binlog不一致（多数是由于网络原因）。且主库无法在第一时间恢复：</p><p>1）如果主库不切换，则应用只能读写主库。如果有读写分离的场景则会影响应用。</p><p>2）如果将某一从库提升为新的主库（如<a href="https://zhuanlan.zhihu.com/p/440182196" target="_blank" rel="noopener">MHA</a>），那么原主库未传到从库的binlog数据则会丢失，并且还涉及到下面2个问题：</p><ul><li>各个从库之间接收到的binlog不一致，如果强制拉起一个从库做新主库，则从库之间数据会不一致。</li><li>原主库恢复正常后，原主库和新主库的binlog不一致。由于新的主库日志丢弃了部分原主库的binlog日志，那么会多出来故障时期的这部分binlog。</li></ul><p>对于上面出现的问题，业内已经有较成熟的方法来解决：</p><p>1）确保binlog全部传到从库</p><p>方案一：使用semisync replication（半同步复制）插件。半同步复制的特点是从库中有一台提交后，主库才能提交事务。优点是保证了主、从库的数据一致性；缺点是对性能影响很大，依赖网络，适合tps压力小的场景。</p><p>方案二：双写binlog，通过DBDR OS层的文件系统复制到备机，或者使用共享盘保存binlog日志。优点和方案一类似，但此方案缺点较明显：</p><ul><li>DBDR需要部署自己的服务</li><li>DBDR脑裂严重。在发生灾难场景时，往往不能正确切换。</li><li>需要建立heartbeat机制。保证被监控机的存活。</li></ul><p>方案三：架构层面调整，引入消息队列做异步消息处理。比如保证数据库写成功后，再异步队列的方式写一份，部分业务可以借助设计和数据流解决。</p><p>2）保证数据最小化丢失</p><p>上面的方案设计及架构比较复杂，如果能容忍数据的丢失，可以考虑使用<a href="https://zhuanlan.zhihu.com/p/440182196" target="_blank" rel="noopener">MHA</a>。</p><p>当master宕机后，<a href="https://zhuanlan.zhihu.com/p/440182196" target="_blank" rel="noopener">MHA</a>可以指定一台或者选延迟最低或者binlog pos最新的一台从库，并将其提升为主库。</p><p><a href="https://zhuanlan.zhihu.com/p/440182196" target="_blank" rel="noopener">MHA</a>在切换master后，原master可以修复后以新master的slave角色重新加入集群。从而达到高可用。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建避坑指南</title>
      <link href="/developbloglog.html"/>
      <url>/developbloglog.html</url>
      
        <content type="html"><![CDATA[<div align="center"><h1>个人博客搭建避坑指南</h1></div><blockquote><p>本文不适用纯小白，无任何开发经验的人士。此博客基于(博客地址:<a href="https://sunhwee.com)二次开发。" target="_blank" rel="noopener">https://sunhwee.com)二次开发。</a></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/%E9%BB%91%E5%AE%A2%E5%9C%B0%E5%9B%BE.jpg" alt=""></p><div align="middle">    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="100%" height="86" src="//music.163.com/outchain/player?type=2&amp;id=152392&amp;auto=0&amp;height=66">    </iframe></div><h1 id="Hello-Word！"><a href="#Hello-Word！" class="headerlink" title="Hello Word！"></a>Hello Word！</h1><p>准备工作:</p><ul><li>有(Html5)和(Jquery)基础</li><li>安装(Git)</li><li>安装(NodeJs12)</li><li>安装开发软件(VsCode)</li></ul><p><a href="https://github.com/shw2018/hexo-blog-fly" target="_blank" rel="noopener">克隆源代码</a></p><p><a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-14" target="_blank" rel="noopener">个性化定制教程</a></p><h1 id="NodeJs"><a href="#NodeJs" class="headerlink" title="NodeJs"></a>NodeJs</h1><p>必须安装12或以下的版本，否则本项目无法正常启动。<br>安装后在cmd中使用<code>node -v</code>即可查看版本号。</p><h1 id="Gitee-pages发布教程"><a href="#Gitee-pages发布教程" class="headerlink" title="Gitee pages发布教程"></a>Gitee pages发布教程</h1><blockquote><p>因该教程网上较为成熟，故这里提供思路，具体步骤可以查询百度。</p></blockquote><ol><li>注册gitee</li><li>新建公共仓库<ul><li>仓库名和gitee用户名同名</li><li>进入仓库开通Gitee pages服务</li></ul></li><li>修改目录下<code>_config.yml</code>中的<code>deploy.repo.gitee</code>为仓库名</li><li>回到项目下执行 hexo d 发布既可通过 <code>https://用户名.gitee.io</code>访问个人博客</li></ol><h1 id="Valine评论系统"><a href="#Valine评论系统" class="headerlink" title="Valine评论系统"></a>Valine评论系统</h1><ol><li><p>注册leancloud账号</p><ul><li><p><a href="https://console.leancloud.cn/login" target="_blank" rel="noopener">注册leancloud传送门</a></p></li><li><p>创建应用</p></li><li><p>选择应用&gt;数据存储&gt;结构化数据&gt;创建Class</p><p>名称：Comment</p><p>权限：所有人</p></li><li><p>设置&gt;安全中心</p><p>服务开关：打开数据存储</p><p>Web 安全域名添加：<a href="https://xxx.gitee.io" target="_blank" rel="noopener">https://xxx.gitee.io</a></p></li><li><p>设置&gt;应用凭证</p><p>AppID和AppKey替换到项目中</p></li></ul></li><li><p>SDK</p><p>下载文件<code>https://unpkg.com/leancloud-storage@4.13.2/dist/av-min.js</code>和<code>https://cdn.jsdelivr.net/npm/valine@1.4.13/dist/Valine.min.js</code>，并将内容分别替换到目录<code>/themes/matery/source/libs/valine/</code>下的<code>av-min.js</code>和<code>Valine.min.js</code>至此即可匿名留言。</p><p>4.13.2版本来源官网：<a href="https://leancloud.cn/docs/sdk_setup-js.html#hash-99064366" target="_blank" rel="noopener">https://leancloud.cn/docs/sdk_setup-js.html#hash-99064366</a></p><p>Valine.min.js 的作用是发评论， av-min.js 的作用是查评论。</p></li><li><p>开启头像显示</p><p>在<code>themes/matery/source/libs/valine/av-min.js</code>文件中，将<code>u = T.hide ? "" :</code>后面的<code>e.config.enableQQ</code>修改为<code>true</code>;</p></li><li><p>修改默认头像地址</p><p>在<code>themes/matery/source/libs/valine/av-min.js</code>文件中搜索<code>}, i.prototype.then = function (t, e) {</code>并在<code>var n = this;</code>之后添加如下代码：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">!==</span> undefined <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>_data <span class="token operator">!==</span> undefined<span class="token punctuation">)</span> <span class="token punctuation">{</span>    n<span class="token punctuation">.</span>_data<span class="token punctuation">.</span>QQAvatar <span class="token operator">=</span> <span class="token string">'默认头像地址'</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h1 id="其他好看博客分享"><a href="#其他好看博客分享" class="headerlink" title="其他好看博客分享"></a>其他好看博客分享</h1><p><a href="https://github.com/vuepress-aurora/vuepress-theme-aurora" target="_blank" rel="noopener">https://github.com/vuepress-aurora/vuepress-theme-aurora</a></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/84dadabad43c9756164cbeac22a15f9.jpg" alt=""></p><p><a href="https://github.com/Haojen/hexo-theme-Claudia" target="_blank" rel="noopener">https://github.com/Haojen/hexo-theme-Claudia</a></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/claudia-cover-v2.png" alt=""></p><p><a href="https://github.com/auroral-ui/hexo-theme-aurora" target="_blank" rel="noopener">https://github.com/auroral-ui/hexo-theme-aurora</a></p><p><img src="https://cdn.jsdelivr.net/gh/shw2018/cdn@1.0/sakura/img/loader/orange.progress-bar-stripe-loader.svg" data-original="/medias/images/68747470733a2f2f696d672d626c6f672e6373646e696d672e636e2f3230323130333238303033303533312e706e67.png" alt=""></p><h1 id="待续…"><a href="#待续…" class="headerlink" title="待续…"></a>待续…</h1><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建转载文章</title>
      <link href="/blogopensource.html"/>
      <url>/blogopensource.html</url>
      
        <content type="html"><![CDATA[<h1 id="简短介绍"><a href="#简短介绍" class="headerlink" title="简短介绍"></a>简短介绍</h1><p>倒腾了一两周总算把个人博客网站完善了，目前这个版本使用应该是够了，当然还有一些优化项和功能增加后续在慢慢更新，为了回馈开源，今天准备把我自己修改完善的<code>blog</code>网站源代码开源。这不是生成后的网页文件，是您可以直接使用的源码，您只需要把博客相关信息换成您自己的就可以部署了，对于新手或者不懂编程的小伙伴来说，简直是福音，极大简化了您构建博客的工作量和复杂度，每个人都可以下载并修改成自己喜欢样式！如果你有修改想法，欢迎PR！最后，我们还是给这个开源小项目取个名字吧，就叫<a href="https://github.com/gyl-coding/hexo-blog-fly.git" target="_blank" rel="noopener">hexo-blog-fly</a>吧，怎么样？&lt;&lt;&lt;&lt;&lt;<a href="https://github.com/gyl-coding/hexo-blog-fly" target="_blank" rel="noopener">源代码下载</a>&gt;&gt;&gt;&gt;&gt;</p><p>本博客基于<code>Hexo</code>框架搭建，用到<a href="https://github.com/gyl-coding/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a>主题, 并在此基础之上做了很多修改，修复了一些bug，增加了一些新的特性和功能，博客地址：<a href="https://shw2018.github.io/" target="_blank" rel="noopener">https://shw2018.github.io</a>，博客演示：<a href="https://sunhwee.com" target="_blank" rel="noopener">sunhwee.com</a>。</p><hr><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><p><strong>原主题特性</strong>:</p><ul><li><p>简单漂亮，文章内容美观易读</p></li><li><p><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</p></li><li><p>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</p></li><li><p>首页轮播文章及每天动态切换 <code>Banner</code> 图片</p></li><li><p>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</p></li><li><p>时间轴式的归档页</p></li><li><p><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</p></li><li><p>丰富的关于我页面（包括关于我、文章分析图、任职经历、我的技能、相册等）</p></li><li><p>可自定义的数据的友情链接页面</p></li><li><p>支持文章置顶和文章打赏</p></li><li><p>支持 <code>MathJax</code></p></li><li><p><code>TOC</code> 目录</p></li><li><p>可设置复制文章内容时追加版权信息</p></li><li><p>可设置阅读文章时做密码验证</p></li><li><p><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</p></li><li><p>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</p></li><li><p>支持在首页的音乐播放和视频播放功能</p><p><strong>增加的工作或特性(未打钩的是已做但还没更新到源码的)</strong>:</p></li><li><p>修改了原主题的一些很多<code>bug</code>   2019.08.05</p></li><li><p>加入图片懒加载功能，在根目录配置文件开启和关闭    2019.08.09</p></li><li><p>增加<code>留言板</code>功能          2019.08.05</p></li><li><p>在关于板块,加入<code>简历</code>功能页   2019.08.05</p></li><li><p>增加视听[视觉听觉影音]板块       2019.08.10</p></li><li><p>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。  2019.08.10</p></li><li><p>增加网站运行时间显示  2019.08.10</p></li><li><p>增加<code>动漫模型</code>     2019.08.10</p></li><li><p>整体替换Banner图片和文章特色图片   2019.08.10</p></li><li><p>增加分类<code>相册</code>功能         2019.08.29</p></li><li><p>去掉标签页,将其合并至<code>分类</code>页中                2019.09.01</p></li><li><p>修改了一些控件的参数   2019.09.01</p></li><li><p>修改部分样式,比如: 文章卡片,固定高度,使其不至于因为文章摘要的长短不同导致卡片大小不一使页面布局很不美观,类似的还有友链卡片,优化了页面内容布局,视觉更整齐美观          2019.09.01</p></li><li><p>解决首页文章列表卡片上方 <code>border-radius</code>圆角失效的bug  2019.09.01</p></li><li><p>添加页面樱花飘落动效            2019.09.09</p></li><li><p>添加鼠标点击烟花爆炸动效   2019.09.09</p></li><li><p>加入天气接口控件   2019.09.09</p></li><li><p>加入鼠标点击文字特效   2019.09.10</p></li><li><p>添加页面雪花飘落动效            2019.09.10</p></li><li><p>添加在线聊天插件            2019.09.12</p></li><li><p>持续更新…</p></li></ul><hr><p><strong>简单使用方法：</strong></p><ol><li><code>star</code> 本项目</li><li>安装<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a>, 安装<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodeJS</a></li><li>你可以直接<code>fork</code>一份源码到你的仓库，<code>clone</code>到本地</li><li>在本地博客仓库运行<code>npm i</code>命令安装依赖包</li><li>修改配置信息，改成自己的信息</li><li>运行命令<code>hexo  clean</code>（清除生成文件），<code>hexo g</code>（生成网页）， <code>hexo  s</code>（本地预览），<code>hexo d</code>（部署）</li></ol><blockquote><p><strong>更多详情教程，强烈推荐看我写的：<a href="https://sunhwee.com/posts/6e8839eb.html" target="_blank" rel="noopener">Hexo+Github博客搭建完全教程</a></strong></p></blockquote><blockquote><p><strong>最后，如果项目和教程对你有所帮助或者你看见了还算比较喜欢，欢迎给我<code>star</code>，谢谢您！</strong></p></blockquote><p><strong>持续更新中…，如果遇到问题欢迎联系我，在文章最后评论区【留言和讨论】，当然，欢迎点击文章最后的打赏按键，请博主一杯冰阔乐，笑～</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 软件安装与配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
